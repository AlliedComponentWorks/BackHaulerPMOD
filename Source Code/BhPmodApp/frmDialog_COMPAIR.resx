<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SensorADCPollTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>47</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAADAwAAABAAgAqA4AAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA0NDQAK/YrwC51bkAydLJACT3JAA08zQAz9DPAGnnaQAA/wAAfeN9AL/U
        vwAK/QoAFPoUAMjSyABo6GgAfON8ABr5GgAr9SsAqNmoAAH/AQC61boAduR2AIngiQBQ7VAAY+ljADjy
        OABL7ksALfUtAEPwQwAv9C8AO/I7AE/tTwBV7FUAkN6QAL291ACLpssAN/O2ADP00AA2894ANvPPADvy
        sADSnI8A1L+/AM7O0QCLi+AANjbzAAIC/gALC/0AIuz3AAD//wBE3d0A/gMDAPI5OQDekJAA0M/PAJmZ
        3QAjI/cAAAD/AC6O9QCtd3cA/wAAAPYpKQDboKAAysrRAFZW7AAXHPoAGPP6ADDo6AD7EBAA/wICAOpf
        XwDRzc0AwsLTADEx9AAyfPQAAv7+AL9lZQDSxsYAxcXTACoq9QAHB/0AMMn0AHG2tgDzMzMA0snJAM7O
        0AA9PfEASlDuAPA9PQDvSUkAcXHlADU18wDUvr4A4oCAALa21gAICP0AUlLtAPBDQwD8DQ0AUVHtABgY
        +QCPj98A4YODAPsSEgDqXV0AvLzVAAUF/gAfH/gAd3fkAMnJ0gDmb28A+hcXAP0KCgDTxcUAFRX6AAYG
        /gAXF/oAODjyAGZm6ACjo9oAz8/QANHOzgDcm5sA6V9fAPQyMgD7ExMA/gQEAPoVFQDdl5cAzc3RANDO
        zgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFWBeAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCRzYAACxy
        LjlzdHV2d3gAAAAAAAAAAAAAAAB5ent8fUU8fn+AaWo5OTk5OTk5a2xtAAAAAAAAAABNbm88PDw8PDw8
        cHEAYzk5OTk5OTk5OWRlAAAAAAAAZmc8PDw8PDw8PDxoAABeXzk5OTk5OTk5OTlgPwAATWE8PDw8PDw8
        PDw8YioAAABaOTk5OTk5OTk5OTlbTlw9PDw8PDw8PDw8PDxdAAAAAFVWOTk5OTk5OTk5OTlXWDw8PDw8
        PDw8PDw8WQAAAAAAAE5POTk5OTk5OTk5UFFSRTw8PDw8PDw8PFNUAAAAAAAAAEhJOTk5OTk5OTlKMUtM
        PDw8PDw8PDw0TQAAAAAAAAAAAD9AOTk5OTk5QUIxMUNEPDw8PDxFRkcAAAAAAAAAAAAAAAA3ODk5OTk6
        MTExMTs8PDw8PT4AAAAAAAAAAAAAAAAAAAArLC0uLzAxMTExMjMzNDU2AAAAAAAAAAAAAAAAAAAAAAAA
        ACIjJCUmJicoKSoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8ICAgICAghAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAIAgICAgICAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeCAgICAgIHwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB0ICAgICAgcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwgICAgICBwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAZCAgICAgIGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcICAgICAgYAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFQgICAgICBYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASCAgICAgTFAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYQCAgICBEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4ICAgI
        DwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgsICAwNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        BwgICQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBAUGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAwAAAAYAAAAAEACAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADQ0NAAv9S/AMnSyQDO0M4ANvM2AFPsUwBv5m8AAP8AAI/fjwC11rUACP0IABb6
        FgDF08UAQ/BDAGTpZACp2akAAf8BAEruSgBn6GcAwNTAAAT+BAAV+hUAzNHMAHzjfACX3ZcAO/I7AFfr
        VwDL0csAIPggAKXapQDB08EAgOKAAJzcnABj6WMAf+J/AFDtUABr52sASO9IAGXoZQA+8T4AUuxSAHLl
        cgBp52kAhuGGAIfhhwCn2acArtiuAM/QzwAX+hcAJfclADjyOABO7U8AT+1PADfyNwAv9C8Az8/QAKam
        2gBxceUAdNfkACz19QAW+voAA/7+AAL//wAC/v4AB/39ABn5+QAx9PQAnMDAAOVycgDZqqoAtbXWAGRk
        6QAbG/kAAAD/AESM8AAA//8AAf//AMprawD/AAAA+B0dAOdpaQDVu7sAsbHXAElJ7wADA/4AKy/1ADTw
        8AD6FhYA/gUFAOxTUwDWt7cAx8fSAF1d6gBFue8AoZaWAP0HBwDRy8sAoqLaABwc+QA0QPMAE/v7ACnz
        8wD2JCQA9yUlANitrQB9feMABAT+AEmt7wCsiooA/QgIAOCKigBhYekAISP4ACzv9QBO3t4A+xISAP8C
        AgDldHQAYGDpAEVq7wAK/f0A4UpKAOVzcwACAv8AV6jrALaIiADhhIQAlJTdAHh45ADqXV0A/gYGANql
        pQC8vNUAERH7AAEB/wBsbOYA0M7OAOxUVAD5HBwA0sbGAERE8AB/f+IA6GdnAP8BAQDrWFgAlpbdABYW
        +gCentsA4IuLAPwMDAD+AgIA2ampACws9QBOTu0AwcHTAPI8PADxPT0AlZXdAC4u9QCfn9sA3pGRAPcj
        IwA7O/IAQUHwAJqa3ADfj48A8zMzAO1QUAC6utUADAz8AD4+8QB7e+MAvb3UANa0tADmcHAA8zQ0AP0L
        CwDSx8cAyMjSAJub3ACAgOIAa2vnAGNj6QB8fOMAkpLeALOz1wDldXUA6GRkAOljYwDmb28A4oGBANyc
        nADRzMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsrO0tba2tbe4uTcAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAGCXlLq7vLu9vr/AqHtJSUlJSUlJSamqq6wAAAAAAAAAAAAAAAAAAAAAAAAAAK2ur19OTk5O
        Tk5OTrCxAKJJSUlJSUlJSUlJSWqjpAAAAAAAAAAAAAAAAAAAAIilpo9OTk5OTk5OTk5OTqcAAJ1JSUlJ
        SUlJSUlJSUlJSZ6fAAAAAAAAAAAAAAAAoKFOTk5OTk5OTk5OTk5Oj5cAAACYSUlJSUlJSUlJSUlJSUlJ
        mZoAAAAAAAAAAFqbTk5OTk5OTk5OTk5OTk5OnAAAAACRSUlJSUlJSUlJSUlJSUlJSZKTAAAAAAAAlJVO
        Tk5OTk5OTk5OTk5OTk6WlwAAAAAAjElJSUlJSUlJSUlJSUlJSUlqjQAAAACOj05OTk5OTk5OTk5OTk5O
        Tk6QAAAAAAAAhIVJSUlJSUlJSUlJSUlJSUlJhocAiIlOTk5OTk5OTk5OTk5OTk5OToqLAAAAAAAAAH97
        SUlJSUlJSUlJSUlJSUlJSUmAgU5OTk5OTk5OTk5OTk5OTk5OgoMAAAAAAAAAAAA5SUlJSUlJSUlJSUlJ
        SUlJSXt8fU5OTk5OTk5OTk5OTk5OTk5OfgAAAAAAAAAAAAAAdklJSUlJSUlJSUlJSUlJSXd4QXlOTk5O
        Tk5OTk5OTk5OTk56AAAAAAAAAAAAAAAAN29JSUlJSUlJSUlJSUlJcHFLS3JzTk5OTk5OTk5OTk5OdHUA
        AAAAAAAAAAAAAAAAAABpaklJSUlJSUlJSUlJa0tLS0tsTk5OTk5OTk5OTk5tbgAAAAAAAAAAAAAAAAAA
        AAAAYWJJSUlJSUlJSUljZEtLS0tlZk5OTk5OTk5OTmdoAAAAAAAAAAAAAAAAAAAAAAAAAFtcVElJSUlJ
        SUldS0tLS0tLXk5OTk5OTk5fUGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUlNUSUlJSVVBS0tLS0tLVldO
        Tk5OWFlaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGR0hJSUpLS0tLS0tLTE1OTk9QUQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADc4OTo7PD0+P0BBQkNERQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAALzAxMhEzNBE1HDYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        LgcHBwcHBwcHBxQCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAcHBwcHBwcHBwct
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKgcHBwcHBwcHBwcrAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAcHBwcHBwcHBwcpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAEQcHBwcHBwcHBwcmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        JwcHBwcHBwcHBwcmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQcHBwcHBwcHBwcm
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwcHBwcHBwcHBwckAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQcHBwcHBwcHBwciAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAHwcHBwcHBwcHBwcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        HQcHBwcHBwcHBxAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwoHBwcHBwcHBxwA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkHBwcHBwcHBxoAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcHBwcHBwcHBxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABMUBwcHBwcHFRYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAARBwcHBwcHEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEAcHBwcKAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQcHBwcOAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQoHBwsMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAYHBwgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAMEBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAgAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA
</value>
  </data>
</root>